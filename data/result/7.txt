输出结果将存放在： /home/why/workspace/pythonProject2/data/result/7.txt
最大长度提取算法输出结果
0001,0800,0604000100,5056,c00008,c0a84801000000000000c0a848,02000000000000000000000000000000000000,

0001,0800,0604000100,5056,c00008,c0a84801000000000000c0a848,02000000000000000000000000000000000000,

偏移量差值字典：
{57: 1, 55: 1, 46: 7, 11: 2, 9: 2, 48: 1, 37: 1, 2: 2, 44: 1, 35: 1, 69: 1, 59: 1, 23: 3, 13: 2, 56: 1, 33: 1, 10: 2, 36: 1}
最大频率偏移量差值： 46
具有最大偏移量差值的重组包索引表： [0]
分割字段组合字典：
[(('c00008', 'c00008'), 1), (('0800', '0800'), 1), (('0001', '0001'), 1), (('5056', '5056'), 1), (('02000000000000000000000000000000000000', '02000000000000000000000000000000000000'), 1), (('c0a84801000000000000c0a848', 'c0a84801000000000000c0a848'), 1), (('0604000100', '0604000100'), 1)]
最大频率分割字段：
('c00008', 'c00008')
更新后的分割字段
('c00008', 'c00008')
字段间隔距离
0
提取包中分割字段的偏移量：
{0: [11, 57]}
提取包长结果：
{0: [46]}
真实包长结果
{0: [46, 46]}
[46]
1
推断包长准确率：
1.0
进行下一步的包的数量：
1
1
推测的包长：
[46]
ngrams的内容：
[['00'], ['01'], ['08'], ['00'], ['06'], ['middle_part'], ['middle_part'], ['middle_part'], ['00'], ['50'], ['56'], ['c0'], ['middle_part'], ['08'], ['c0'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['48'], ['02'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['middle_part'], ['00']]
